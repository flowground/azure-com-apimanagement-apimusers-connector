{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://management.azure.com/"
        }
    ],
    "info": {
        "description": "Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.",
        "title": "ApiManagementClient",
        "version": "2016-10-10",
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
        },
        "x-origin": [
            {
                "format": "swagger",
                "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2016-10-10/apimusers.json",
                "version": "2.0"
            }
        ],
        "x-preferred": true,
        "x-providerName": "azure.com",
        "x-serviceName": "apimanagement-apimusers",
        "x-tags": [
            "Azure",
            "Microsoft"
        ]
    },
    "security": [
        {
            "azure_auth": [
                "user_impersonation"
            ]
        }
    ],
    "paths": {
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users": {
            "get": {
                "description": "Lists a collection of registered users in the specified service instance.",
                "externalDocs": {
                    "url": "https://msdn.microsoft.com/en-us/library/azure/dn776330.aspx"
                },
                "operationId": "Users_ListByService",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "| Field            | Supported operators    | Supported functions               |\n|------------------|------------------------|-----------------------------------|\n| id               | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| firstName        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| lastName         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| email            | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state            | eq                     | N/A                               |\n| registrationDate | ge, le, eq, ne, gt, lt | N/A                               |\n| note             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |",
                        "in": "query",
                        "name": "$filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of records to return.",
                        "in": "query",
                        "name": "$top",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        }
                    },
                    {
                        "description": "Number of records to skip.",
                        "in": "query",
                        "name": "$skip",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lists a collection of User entities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Paged Users list representation.",
                                    "properties": {
                                        "count": {
                                            "description": "Total record count number across all pages.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "nextLink": {
                                            "description": "Next page link if any.",
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Page values.",
                                            "items": {
                                                "description": "User profile.",
                                                "properties": {
                                                    "email": {
                                                        "description": "Email address.",
                                                        "type": "string"
                                                    },
                                                    "firstName": {
                                                        "description": "First name.",
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "description": "User identifier path.",
                                                        "type": "string"
                                                    },
                                                    "identities": {
                                                        "description": "Collection of user identities.",
                                                        "items": {
                                                            "description": "User identity details.",
                                                            "properties": {
                                                                "id": {
                                                                    "description": "Identifier value within provider.",
                                                                    "type": "string"
                                                                },
                                                                "provider": {
                                                                    "description": "Identity provider name.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "readOnly": true,
                                                        "type": "array"
                                                    },
                                                    "lastName": {
                                                        "description": "Last name.",
                                                        "type": "string"
                                                    },
                                                    "note": {
                                                        "description": "Administrator's note about given user.",
                                                        "type": "string"
                                                    },
                                                    "registrationDate": {
                                                        "description": "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "User state.",
                                                        "enum": [
                                                            "Active",
                                                            "Blocked"
                                                        ],
                                                        "type": "string",
                                                        "x-ms-enum": {
                                                            "modelAsString": false,
                                                            "name": "UserStateContract"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ],
                "x-ms-odata": "#/components/schemas/UserContract",
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}": {
            "delete": {
                "description": "Deletes specific user.",
                "operationId": "Users_Delete",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "User identifier. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "Whether to delete user's subscription or not.",
                        "in": "query",
                        "name": "deleteSubscriptions",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "The entity state (Etag) version of the user to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
                        "in": "header",
                        "name": "If-Match",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The user details were successfully deleted."
                    },
                    "405": {
                        "description": "Administrator user cannot be modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "get": {
                "description": "Gets the details of the user specified by its identifier.",
                "operationId": "Users_Get",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "User identifier. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gets the specified user entity.",
                        "headers": {
                            "ETag": {
                                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "User profile.",
                                    "properties": {
                                        "email": {
                                            "description": "Email address.",
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "description": "First name.",
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "User identifier path.",
                                            "type": "string"
                                        },
                                        "identities": {
                                            "description": "Collection of user identities.",
                                            "items": {
                                                "description": "User identity details.",
                                                "properties": {
                                                    "id": {
                                                        "description": "Identifier value within provider.",
                                                        "type": "string"
                                                    },
                                                    "provider": {
                                                        "description": "Identity provider name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readOnly": true,
                                            "type": "array"
                                        },
                                        "lastName": {
                                            "description": "Last name.",
                                            "type": "string"
                                        },
                                        "note": {
                                            "description": "Administrator's note about given user.",
                                            "type": "string"
                                        },
                                        "registrationDate": {
                                            "description": "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "state": {
                                            "description": "User state.",
                                            "enum": [
                                                "Active",
                                                "Blocked"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "UserStateContract"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "patch": {
                "description": "Updates the details of the user specified by its identifier.",
                "operationId": "Users_Update",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "User identifier. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "The entity state (Etag) version of the user to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
                        "in": "header",
                        "name": "If-Match",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The user details were successfully updated."
                    },
                    "405": {
                        "description": "Administrator user cannot be modified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Parameters supplied to the Update User operation.",
                                "properties": {
                                    "email": {
                                        "description": "Email address.",
                                        "type": "string"
                                    },
                                    "firstName": {
                                        "description": "First name.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "description": "Last name.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "note": {
                                        "description": "Note about user.",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password.",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "Account state.",
                                        "enum": [
                                            "Active",
                                            "Blocked"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                            "modelAsString": false,
                                            "name": "UserStateContract"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "Update parameters.",
                    "required": true
                }
            },
            "put": {
                "description": "Creates or Updates a user.",
                "operationId": "Users_CreateOrUpdate",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "User identifier. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User was successfully created."
                    },
                    "204": {
                        "description": "User was successfully updated."
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Parameters supplied to the Create User operation.",
                                "properties": {
                                    "email": {
                                        "description": "Email address. Must not be empty and must be unique within the service instance.",
                                        "maxLength": 254,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "firstName": {
                                        "description": "First name.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "description": "Last name.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "note": {
                                        "description": "Optional note about a user set by the administrator.",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User Password.",
                                        "type": "string"
                                    },
                                    "state": {
                                        "default": "Active",
                                        "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
                                        "enum": [
                                            "Active",
                                            "Blocked"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                            "modelAsString": false,
                                            "name": "UserStateContract"
                                        }
                                    }
                                },
                                "required": [
                                    "email",
                                    "password",
                                    "firstName",
                                    "lastName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Create or update parameters.",
                    "required": true
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl": {
            "post": {
                "description": "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal.",
                "operationId": "Users_GenerateSsoUrl",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "User identifier. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body contains the single sign-on URL.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "x-ms-client-flatten": true,
                                    "description": "Generate SSO Url operations response details.",
                                    "properties": {
                                        "value": {
                                            "description": "Redirect Url containing the SSO URL value.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups": {
            "get": {
                "description": "Lists all user groups.",
                "operationId": "UserGroups_ListByUsers",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "User identifier. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |",
                        "in": "query",
                        "name": "$filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of records to return.",
                        "in": "query",
                        "name": "$top",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        }
                    },
                    {
                        "description": "Number of records to skip.",
                        "in": "query",
                        "name": "$skip",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lists a collection of Group entities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Paged Group list representation.",
                                    "properties": {
                                        "count": {
                                            "description": "Total record count number across all pages.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "nextLink": {
                                            "description": "Next page link if any.",
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Page values.",
                                            "items": {
                                                "description": "Developer group.",
                                                "properties": {
                                                    "builtIn": {
                                                        "description": "true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.",
                                                        "readOnly": true,
                                                        "type": "boolean"
                                                    },
                                                    "description": {
                                                        "description": "Group description. Can contain HTML formatting tags.",
                                                        "maxLength": 1000,
                                                        "type": "string"
                                                    },
                                                    "externalId": {
                                                        "description": "For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the value is null.",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "description": "Uniquely identifies the group within the current API Management service instance. The value is a valid relative URL in the format of /groups/{groupid} where {groupid} is a group identifier.",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Group name.",
                                                        "maxLength": 300,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Group type.",
                                                        "enum": [
                                                            "Custom",
                                                            "System",
                                                            "External"
                                                        ],
                                                        "readOnly": true,
                                                        "type": "string",
                                                        "x-ms-enum": {
                                                            "modelAsString": false,
                                                            "name": "GroupTypeContract"
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "UserGroups"
                ],
                "x-ms-odata": "#/components/schemas/./apimgroups.jsonGroupContract",
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                },
                "x-s2o-warning": "Could not resolve reference #/components/schemas/./apimgroups.jsonGroupContract"
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities": {
            "get": {
                "description": "Lists all user identities.",
                "operationId": "UserIdentities_ListByUsers",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "User identifier. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lists of User Identities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "List of Users Identity list representation.",
                                    "properties": {
                                        "value": {
                                            "description": "User Identity values.",
                                            "items": {
                                                "description": "User identity details.",
                                                "properties": {
                                                    "id": {
                                                        "description": "Identifier value within provider.",
                                                        "type": "string"
                                                    },
                                                    "provider": {
                                                        "description": "Identity provider name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "UserIdentities"
                ]
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions": {
            "get": {
                "description": "Lists the collection of subscriptions of the specified user.",
                "operationId": "UserSubscriptions_ListByUsers",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "User identifier. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |",
                        "in": "query",
                        "name": "$filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of records to return.",
                        "in": "query",
                        "name": "$top",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        }
                    },
                    {
                        "description": "Number of records to skip.",
                        "in": "query",
                        "name": "$skip",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lists a collection of Subscription entities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Paged Subscriptions list representation.",
                                    "properties": {
                                        "count": {
                                            "description": "Total record count number across all pages.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "nextLink": {
                                            "description": "Next page link if any.",
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Page values.",
                                            "items": {
                                                "description": "Subscription details.",
                                                "properties": {
                                                    "createdDate": {
                                                        "description": "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "description": "Date when subscription was cancelled or expired. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "expirationDate": {
                                                        "description": "Subscription expiration date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "description": "Uniquely identifies the subscription within the current API Management service instance. The value is a valid relative URL in the format of /subscriptions/{sid} where {sid} is a subscription identifier.",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the subscription, or null if the subscription has no name.",
                                                        "maxLength": 100,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "notificationDate": {
                                                        "description": "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "primaryKey": {
                                                        "description": "Subscription primary key.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "productId": {
                                                        "description": "The product resource identifier of the subscribed product. The value is a valid relative URL in the format of /products/{productId} where {productId} is a product identifier.",
                                                        "type": "string"
                                                    },
                                                    "secondaryKey": {
                                                        "description": "Subscription secondary key.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "description": "Subscription activation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
                                                        "enum": [
                                                            "Suspended",
                                                            "Active",
                                                            "Expired",
                                                            "Submitted",
                                                            "Rejected",
                                                            "Cancelled"
                                                        ],
                                                        "type": "string",
                                                        "x-ms-enum": {
                                                            "modelAsString": false,
                                                            "name": "SubscriptionStateContract"
                                                        }
                                                    },
                                                    "stateComment": {
                                                        "description": "Optional subscription comment added by an administrator.",
                                                        "type": "string"
                                                    },
                                                    "userId": {
                                                        "description": "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{uid} where {uid} is a user identifier.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "UserSubscriptions"
                ],
                "x-ms-odata": "#/components/schemas/./apimsubscriptions.jsonSubscriptionContract",
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                },
                "x-s2o-warning": "Could not resolve reference #/components/schemas/./apimsubscriptions.jsonSubscriptionContract"
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/token": {
            "post": {
                "description": "Gets the Shared Access Authorization Token for the User.",
                "operationId": "Users_GetSharedAccessToken",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "User identifier. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body contains the authorization token for the user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "x-ms-client-flatten": true,
                                    "description": "Get User Token response details.",
                                    "properties": {
                                        "value": {
                                            "description": "Shared Access Authorization token for the User.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ],
                "x-ms-examples": {
                    "ApiManagementUsersGetToken": {
                        "parameters": {
                            "api-version": "2016-10-10",
                            "parameters": {
                                "expiry": "2017-05-13T10:39:35Z",
                                "keyType": "primary"
                            },
                            "resourceGroupName": "rg1",
                            "serviceName": "apimService1",
                            "subscriptionId": "subid",
                            "uid": "57f2af53bb17172280f44057"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": "57f2af53bb17172280f44057&201705131039&***************************/tJVExvjA=="
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Parameters supplied to the Get User Token operation.",
                                "properties": {
                                    "expiry": {
                                        "description": "The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "keyType": {
                                        "default": "primary",
                                        "description": "The Key to be used to generate token for user.",
                                        "enum": [
                                            "primary",
                                            "secondary"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                            "modelAsString": false,
                                            "name": "KeyTypeContract"
                                        }
                                    }
                                },
                                "required": [
                                    "keyType",
                                    "expiry"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Create Authorization Token parameters.",
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GenerateSsoUrlResult": {
                "description": "Generate SSO Url operations response details.",
                "properties": {
                    "value": {
                        "description": "Redirect Url containing the SSO URL value.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserCollection": {
                "description": "Paged Users list representation.",
                "properties": {
                    "count": {
                        "description": "Total record count number across all pages.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "nextLink": {
                        "description": "Next page link if any.",
                        "type": "string"
                    },
                    "value": {
                        "description": "Page values.",
                        "items": {
                            "description": "User profile.",
                            "properties": {
                                "email": {
                                    "description": "Email address.",
                                    "type": "string"
                                },
                                "firstName": {
                                    "description": "First name.",
                                    "type": "string"
                                },
                                "id": {
                                    "description": "User identifier path.",
                                    "type": "string"
                                },
                                "identities": {
                                    "description": "Collection of user identities.",
                                    "items": {
                                        "description": "User identity details.",
                                        "properties": {
                                            "id": {
                                                "description": "Identifier value within provider.",
                                                "type": "string"
                                            },
                                            "provider": {
                                                "description": "Identity provider name.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                },
                                "lastName": {
                                    "description": "Last name.",
                                    "type": "string"
                                },
                                "note": {
                                    "description": "Administrator's note about given user.",
                                    "type": "string"
                                },
                                "registrationDate": {
                                    "description": "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "state": {
                                    "description": "User state.",
                                    "enum": [
                                        "Active",
                                        "Blocked"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                        "modelAsString": false,
                                        "name": "UserStateContract"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UserContract": {
                "description": "User profile.",
                "properties": {
                    "email": {
                        "description": "Email address.",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "First name.",
                        "type": "string"
                    },
                    "id": {
                        "description": "User identifier path.",
                        "type": "string"
                    },
                    "identities": {
                        "description": "Collection of user identities.",
                        "items": {
                            "description": "User identity details.",
                            "properties": {
                                "id": {
                                    "description": "Identifier value within provider.",
                                    "type": "string"
                                },
                                "provider": {
                                    "description": "Identity provider name.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "lastName": {
                        "description": "Last name.",
                        "type": "string"
                    },
                    "note": {
                        "description": "Administrator's note about given user.",
                        "type": "string"
                    },
                    "registrationDate": {
                        "description": "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                        "format": "date-time",
                        "type": "string"
                    },
                    "state": {
                        "description": "User state.",
                        "enum": [
                            "Active",
                            "Blocked"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "UserStateContract"
                        }
                    }
                },
                "type": "object"
            },
            "UserCreateParameters": {
                "description": "Parameters supplied to the Create User operation.",
                "properties": {
                    "email": {
                        "description": "Email address. Must not be empty and must be unique within the service instance.",
                        "maxLength": 254,
                        "minLength": 1,
                        "type": "string"
                    },
                    "firstName": {
                        "description": "First name.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Last name.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "note": {
                        "description": "Optional note about a user set by the administrator.",
                        "type": "string"
                    },
                    "password": {
                        "description": "User Password.",
                        "type": "string"
                    },
                    "state": {
                        "default": "Active",
                        "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
                        "enum": [
                            "Active",
                            "Blocked"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "UserStateContract"
                        }
                    }
                },
                "required": [
                    "email",
                    "password",
                    "firstName",
                    "lastName"
                ],
                "type": "object"
            },
            "UserIdentityCollection": {
                "description": "List of Users Identity list representation.",
                "properties": {
                    "value": {
                        "description": "User Identity values.",
                        "items": {
                            "description": "User identity details.",
                            "properties": {
                                "id": {
                                    "description": "Identifier value within provider.",
                                    "type": "string"
                                },
                                "provider": {
                                    "description": "Identity provider name.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UserIdentityContract": {
                "description": "User identity details.",
                "properties": {
                    "id": {
                        "description": "Identifier value within provider.",
                        "type": "string"
                    },
                    "provider": {
                        "description": "Identity provider name.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserTokenParameters": {
                "description": "Parameters supplied to the Get User Token operation.",
                "properties": {
                    "expiry": {
                        "description": "The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                        "format": "date-time",
                        "type": "string"
                    },
                    "keyType": {
                        "default": "primary",
                        "description": "The Key to be used to generate token for user.",
                        "enum": [
                            "primary",
                            "secondary"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "KeyTypeContract"
                        }
                    }
                },
                "required": [
                    "keyType",
                    "expiry"
                ],
                "type": "object"
            },
            "UserTokenResult": {
                "description": "Get User Token response details.",
                "properties": {
                    "value": {
                        "description": "Shared Access Authorization token for the User.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserUpdateParameters": {
                "description": "Parameters supplied to the Update User operation.",
                "properties": {
                    "email": {
                        "description": "Email address.",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "First name.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Last name.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "note": {
                        "description": "Note about user.",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password.",
                        "type": "string"
                    },
                    "state": {
                        "description": "Account state.",
                        "enum": [
                            "Active",
                            "Blocked"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                            "modelAsString": false,
                            "name": "UserStateContract"
                        }
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "UserIdParameter": {
                "description": "User identifier. Must be unique in the current API Management service instance.",
                "in": "path",
                "name": "uid",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256,
                    "pattern": "^[^*#&+:<>?]+$"
                }
            }
        },
        "securitySchemes": {
            "azure_auth": {
                "description": "Azure Active Directory OAuth2 Flow.",
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
                        "scopes": {
                            "user_impersonation": "impersonate your user account"
                        }
                    }
                }
            }
        }
    }
}